



main:

    do set_all_variables(inserted_variables)

    is_good_to_go = test_all_input_files_with_message() : testing existence of data file, and valid ref sequences.
    if not is_good_to_go:
        RETURN

    read_file_list = get_valid_data_file_names_list() : return valid data file names, ignoring set-keywords
    reference_list = get_reference_list_from_file() : return references, in the files in ref

    total_reads_count_for_time_estimation = get_total_reads_count(read_file_list) : 50000 per sec, count all read_file in read_file_list by opening it
    finished_reads_count_for_time_estimation = 0


    seq_hashmap = dict()

    for file_no, file_name in read_file_list:

        read_raw_list = get_read_raw_list(file_name)

        for read_raw in read_raw_list:

            # add hashmap key
            seq = str(read_raw.seq)
            seq_key = seq[PADDING:-PADDING]
            seq_key_hashmap[seq_key] = None


    for seq_key in seq_key_hashmap.keys():

        aligned_key = get_best_aligned_key(seq, reference_list)

        seq_key_hashmap[focusing_seq] = aligned_key


    for file_no, file_name in read_file_list:



        indel_counter_list = []
        for reference in reference_list:
            indel_counter = Indel_Counter_For_Reference(reference)
            indel_counter_list.append(indel_counter)


        line_set_list = []
        for read_raw in read_raw_list:
